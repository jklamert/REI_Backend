type Stat {
  "Fields that you can retrieve from a stat object."
  medianPrice: Float
  modePrice: Int
  averagePrice: Float
  city: String
  state: String
  zip: String
  beds: Float
  baths: Float
  averagePricePerSqFt: Float
  modePricePerSqFt: Int
  medianPricePerSqFt: Float
  averageSqFt: Float
  modeSqFt: Int
  medianSqFt: Float
  averageLotSize: Float
  modeLotSize: Int
  medianLotSize: Float
  averageBeds: Float
  medianBeds: Float
  modeBeds: Int
  averageBaths: Float
  medianBaths: Float
  modeBaths: Int
  averageHoa: Float
  medianHoa: Float
  modeHoa: Int
  averageYearBuilt: Float
  medianYearBuilt: Float
  modeYearBuilt: Int
  curDateUtc: String
}

input StatInput {
  "Fields responsible for creating a new stat object."
  medianPrice: Float
  modePrice: Int
  averagePrice: Float
  city: String
  state: String
  zip: String
  beds: Float
  baths: Float
  averagePricePerSqFt: Float
  modePricePerSqFt: Int
  medianPricePerSqFt: Float
  averageSqFt: Float
  modeSqFt: Int
  medianSqFt: Float
  averageLotSize: Float
  modeLotSize: Int
  medianLotSize: Float
  averageBeds: Float
  medianBeds: Float
  modeBeds: Int
  averageBaths: Float
  medianBaths: Float
  modeBaths: Int
  averageHoa: Float
  medianHoa: Float
  modeHoa: Int
  averageYearBuilt: Float
  medianYearBuilt: Float
  modeYearBuilt: Int
  curDateUtc: String
}

extend type Query {
  stat: Stat
}

type AddStatMutationResponse implements MutationResponse {
  code: String!
  success: Boolean!
  message: String!
  stat: Stat
}

extend type Mutation {
  addStat(stat: StatInput!): AddStatMutationResponse
}
