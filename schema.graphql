scalar DateTime

interface MutationResponse {
  code: String!
  success: Boolean!
  message: String!
}

type Query {
  user(id: Int): User
  userByName(name: String): User
  search(id: Int): Search
  searches(city: String!, state: String!): [Search]
  searchesByUserId(userId: Int!): [Search]
  expense(id: Int): Expense
  listing(listingId: Int!): Listing
  stats(city: String, state: String, curDateUtc: String): [Stat]
}

type Search {
  id: Int
  city: String
  state: String
  expenseFk: Expense
  zip: String
  user: Int
  beds: Int
  minBath: Float
  maxBath: Float
}

type Expense {
  id: Int
  taxes: Float
  insurance: Float
  water: Float
  sewer: Float
  garbage: Float
  electric: Float
  gas: Float
  hoa: Float
  lot: Float
  vacancy: Float
  repairs: Float
  capex: Float
  management: Float
  mortgage: Float
}

input ExpenseInput {
  id: Int
  taxes: Float
  insurance: Float
  water: Float
  sewer: Float
  garbage: Float
  electric: Float
  gas: Float
  hoa: Float
  lot: Float
  vacancy: Float
  repairs: Float
  capex: Float
  management: Float
  mortgage: Float
}

type User {
  id: Int
  name: String!
}

input UserInput {
  id: Int
  name: String!
}

type Listing {
  mlsStatus: String
  price: Int
  sqft: Int
  pricePerSqFt: Int
  lotSize: Int
  beds: Float
  baths: Float
  fullBaths: Float
  partialBaths: Float
  streetLine: String!
  stories: Float
  city: String!
  state: String!
  zip: String!
  soldDate: Int
  propertyType: Int
  yearBuilt: Int
  timeZone: String
  url: String!
  location: String
  propertyId: Int!
  listingId: Int!
  latitude: Float
  longitude: Float
  mlsId: String!
  hoa: Int
}

input SearchInput {
  id: Int
  city: String
  state: String
  expenseFk: ExpenseInput
  zip: String
  user: Int
  beds: Int
  minBath: Float
  maxBath: Float
}

input ListingInput {
  mlsStatus: String
  price: Int
  sqft: Int
  pricePerSqFt: Int
  lotSize: Int
  beds: Float
  baths: Float
  fullBaths: Float
  partialBaths: Float
  streetLine: String!
  stories: Float
  city: String!
  state: String!
  zip: String!
  soldDate: Int
  propertyType: Int
  yearBuilt: Int
  timeZone: String
  url: String!
  location: String
  propertyId: Int!
  listingId: Int!
  latitude: Float
  longitude: Float
  mlsId: String!
  hoa: Int
}

type AddExpenseMutationResponse implements MutationResponse {
  code: String!
  success: Boolean!
  message: String!
  expense: Expense
}

type AddUserMutationResponse implements MutationResponse {
  code: String!
  success: Boolean!
  message: String!
  user: User
}

type AddListingMutationResponse implements MutationResponse {
  code: String!
  success: Boolean!
  message: String!
  listing: Listing
}

type AddSearchMutationResponse implements MutationResponse {
  code: String!
  success: Boolean!
  message: String!
  search: Search
}

type Mutation {
  updateExpense(expense: ExpenseInput!): AddExpenseMutationResponse
  addExpense(expense: ExpenseInput!): AddExpenseMutationResponse
  addUser(user: UserInput!): AddUserMutationResponse
  updateUser(user: UserInput!): AddUserMutationResponse
  addListing(listing: ListingInput!): AddListingMutationResponse
  addStat(stat: StatInput!): AddStatMutationResponse
  addSearch(search: SearchInput!): AddSearchMutationResponse
  updateSearch(search: SearchInput!): AddSearchMutationResponse
}

type Stat {
  "Fields that you can retrieve from a stat object."
  medianPrice: Float
  modePrice: Int
  averagePrice: Float
  city: String
  state: String
  zip: String
  beds: Float
  baths: Float
  averagePricePerSqFt: Float
  modePricePerSqFt: Int
  medianPricePerSqFt: Float
  averageSqFt: Float
  modeSqFt: Int
  medianSqFt: Float
  averageLotSize: Float
  modeLotSize: Int
  medianLotSize: Float
  averageBeds: Float
  medianBeds: Float
  modeBeds: Int
  averageBaths: Float
  medianBaths: Float
  modeBaths: Int
  averageHoa: Float
  medianHoa: Float
  modeHoa: Int
  averageYearBuilt: Float
  medianYearBuilt: Float
  modeYearBuilt: Int
  curDateUtc: String
}

input StatInput {
  "Fields responsible for creating a new stat object."
  medianPrice: Float
  modePrice: Int
  averagePrice: Float
  city: String
  state: String
  zip: String
  beds: Float
  baths: Float
  averagePricePerSqFt: Float
  modePricePerSqFt: Int
  medianPricePerSqFt: Float
  averageSqFt: Float
  modeSqFt: Int
  medianSqFt: Float
  averageLotSize: Float
  modeLotSize: Int
  medianLotSize: Float
  averageBeds: Float
  medianBeds: Float
  modeBeds: Int
  averageBaths: Float
  medianBaths: Float
  modeBaths: Int
  averageHoa: Float
  medianHoa: Float
  modeHoa: Int
  averageYearBuilt: Float
  medianYearBuilt: Float
  modeYearBuilt: Int
  curDateUtc: String
}

type AddStatMutationResponse implements MutationResponse {
  code: String!
  success: Boolean!
  message: String!
  stat: Stat!
}

schema {
  query: Query
  mutation: Mutation
}
